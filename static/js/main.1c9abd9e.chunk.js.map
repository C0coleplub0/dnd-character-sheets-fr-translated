{"version":3,"sources":["../../src/Components/StatBox.tsx","../../src/Components/StatRow.tsx","../../src/Components/Skill.tsx","../../src/Components/StatBox2.tsx","../../src/Components/DeathSave.tsx","../../src/Components/AttackTable.tsx","../../src/Components/Currency.tsx","../../src/Components/PageTitle.tsx","../../src/DnDCharacterStatsSheet.tsx","../../src/Components/Image.tsx","../../src/DnDCharacterProfileSheet.tsx","../../src/Components/SpellTable.tsx","../../src/DnDCharacterSpellSheet.tsx","App.tsx","index.tsx"],"names":["StatBox","props","classes","modifier","value","isNaN","Number","modifierNum","Math","floor","toString","React","createElement","className","label","type","onChange","e","name","target","StatRow","Skill","checked","onClick","hint","StatBox2","labelTop","DeathSave","style","display","AttackTable","updateValue","index","field","v","getValue","slice","length","rows","push","width","map","key","bonus","damage","Currency","PageTitle","_ref","_ref$value","_onChange","placeholder","initialState","character","DnDCharacterStatsSheet","_React$Component","_this","call","defaultCharacter","state","_inheritsLoose","_proto","prototype","updateCharacter","oldCharacter","this","getCharacter","newCharacter","Object","assign","setState","onCharacterChanged","render","pageTitle","_this2","textAlign","textTransform","fontSize","classLevel","background","playerName","faction","race","alignment","str","dex","con","wis","cha","inspiration","proficiencyBonus","strSave","strSaveChecked","dexSave","dexSaveChecked","conSave","conSaveChecked","intSave","intSaveChecked","wisSave","wisSaveChecked","chaSave","chaSaveChecked","marginTop","skillAcrobatics","skillAcrobaticsChecked","skillArcana","skillArcanaChecked","skillAthletics","skillAthleticsChecked","skillStealth","skillStealthChecked","skillAnimalHandling","skillAnimalHandlingChecked","skillDeception","skillDeceptionChecked","skillHistory","skillHistoryChecked","skillIntimidation","skillIntimidationChecked","skillInsight","skillInsightChecked","skillInvestigation","skillInvestigationChecked","skillMedicine","skillMedicineChecked","skillNature","skillNatureChecked","skillPerception","skillPerceptionChecked","skillPersuasion","skillPersuasionChecked","skillReligion","skillReligionChecked","skillSlightOfHand","skillSlightOfHandChecked","skillSurvival","skillSurvivalChecked","skillTromperie","skillTromperieChecked","passivePerception","otherProficiencies","ac","init","speed","borderRadius","marginBottom","paddingBottom","maxHp","hp","onKeyDown","inputValue","currentTarget","trim","result","evaluate","round","error","console","tempHp","hitDiceMax","hitDice","deathsaveSuccesses","deathsaveFailures","attacks","attacksText","cp","sp","gp","pp","equipment","equipment2","paddingTop","personalityTraits","ideals","bonds","flaws","featuresTraits","Component","Image","elementId","backgroundImage","_document$getElementB","document","getElementById","click","id","accept","event","log","files","size","window","alert","fr","FileReader","onload","readAsDataURL","importImage","initialState$1","DnDCharacterProfileSheet","age","height","weight","eyes","skin","hair","appearance","backstory","factionRank","allies","factionImg","allies2","additionalFeatures","additionalFeatures2","totalNonConsumableMagicItems","treasure","treasure2","SpellTable","showLabels","level","slotsValue","slotsName","slotCount","slots","_loop","i1","slotsUsedValue","slotsUsedName","renderSlotsRemaining","position","left","prepared","initialState$2","DnDCharacterSpellsSheet","spellcastingClass","preparedSpellsTotal","spellSaveDC","spellAttackBonus","cantrips","lvl1Spells","lvl1SpellSlotsTotal","lvl1SpellSlotsUsed","lvl2Spells","lvl2SpellSlotsTotal","lvl2SpellSlotsUsed","lvl3Spells","lvl3SpellSlotsTotal","lvl3SpellSlotsUsed","lvl4Spells","lvl4SpellSlotsTotal","lvl4SpellSlotsUsed","lvl5Spells","lvl5SpellSlotsTotal","lvl5SpellSlotsUsed","lvl6Spells","lvl6SpellSlotsTotal","lvl6SpellSlotsUsed","lvl7Spells","lvl7SpellSlotsTotal","lvl7SpellSlotsUsed","lvl8Spells","lvl8SpellSlotsTotal","lvl8SpellSlotsUsed","lvl9Spells","lvl9SpellSlotsTotal","lvl9SpellSlotsUsed","ScrollToTop","pathname","useLocation","useEffect","scrollTo","withRouter","setCharacter","useState","lsData","localStorage","getItem","JSON","parse","_unused2","loadDefaultCharacter","navTop","setNavTop","prevScrollpos","setPrevScrollpos","pageYOffset","setLoading","search","characterToLoad","qs","ignoreQueryPrefix","axios","get","then","response","Array","isArray","data","Error","_unused","catch","statsSheet","profileSheet","spellSheet","DnDCharacterSpellSheet","setItem","stringify","importCharacter","json","_unused3","loadCharacter","readAsText","onscroll","currentScrollPos","onScroll","backgroundColor","top","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Link","location","to","a","file","Blob","href","URL","createObjectURL","download","replace","toLowerCase","exportCharacter","print","Switch","Route","exact","path","Redirect","defaultRedirect","innerWidth","getDefaultRedirect","ReactDOM","Router","basename","App"],"mappings":"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","file":"static/js/main.1c9abd9e.chunk.js","sourcesContent":["import React from 'react'\n\nfunction StatBox(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  label: React.ReactNode\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  let classes = 'd-and-d-statbox'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  let modifier: string = ''\n  if (props.value && !isNaN(Number(props.value))) {\n    const modifierNum = Math.floor((Number(props.value) - 10) / 2)\n    if (modifierNum > 0) {\n      modifier = '+' + modifierNum\n    } else {\n      modifier = modifierNum.toString()\n    }\n  }\n\n  return (\n    <div>\n      <div className={classes}>\n        <label>{props.label}</label>\n        <div className='d-and-d-statbox-modifier'>{modifier}</div>\n      </div>\n      <div className='d-and-d-statbox-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default StatBox\n","import React from 'react'\n\nfunction StatRow(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n  label: React.ReactNode\n}) {\n  let classes = 'd-and-d-statrow'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <div className='d-and-d-statrow-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n      <div className='d-and-d-statrow-label'>\n        <label>{props.label}</label>\n      </div>\n    </div>\n  )\n}\n\nexport default StatRow\n","import React from 'react'\n\nfunction Skill(props: {\n  classes?: string\n  checked?: boolean\n  onChange: (arg0: string, arg1: string | boolean) => void\n  name: string\n  value: string | number | readonly string[] | undefined\n  label?: React.ReactNode\n  hint?: React.ReactNode\n}) {\n  let classes = 'd-and-d-skill'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <div\n        className={\n          props.checked ? 'd-and-d-skill-circle active' : 'd-and-d-skill-circle'\n        }\n        onClick={() => props.onChange(props.name + 'Checked', !props.checked)}\n      />\n      <input\n        type='text'\n        value={props.value ? props.value : ''}\n        onChange={(e) => props.onChange(props.name, e.target.value)}\n      />\n      <label>{props.label}</label>\n      {props.hint ? (\n        <span className='d-and-d-skill-hint'>{props.hint}</span>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Skill\n","import React from 'react'\n\nfunction StatBox2(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n  labelTop?: {} | null | undefined\n  label?: React.ReactNode\n}) {\n  let classes = 'd-and-d-statbox type2'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div>\n      <div className={classes}>\n        <div className='d-and-d-statbox-modifier'>\n          <input\n            type='text'\n            value={props.value ? props.value : ''}\n            onChange={(e) => props.onChange(props.name, e.target.value)}\n          />\n        </div>\n        {props.labelTop != null ? (\n          <div>\n            <label className='label-top'>{props.labelTop}</label>\n          </div>\n        ) : null}\n        {props.label != null ? (\n          <div>\n            <label>{props.label}</label>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nexport default StatBox2\n","import React from 'react'\n\nfunction DeathSave(props: {\n  classes?: string\n  label: React.ReactNode\n  value?: number\n  onChange: (arg0: any, arg1: number | null) => void\n  name: any\n}) {\n  let classes = 'd-and-d-deathsave'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <label>{props.label}</label>\n      <div style={{ display: 'inline-block' }}>\n        <div\n          className={\n            props.value && props.value >= 1\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(props.name, props.value === 1 ? null : 1)\n          }\n        />\n        =\n        <div\n          className={\n            props.value && props.value >= 2\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(props.name, props.value === 2 ? null : 2)\n          }\n        />\n        =\n        <div\n          className={\n            props.value && props.value >= 3\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(props.name, props.value === 3 ? null : 3)\n          }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default DeathSave\n","import React from 'react'\n\nfunction AttackTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  value?: any\n  classes?: string\n  rows: number\n}) {\n  function updateValue(index: React.Key, field: string, v: string) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  let classes = 'd-and-d-table'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <table className={classes}>\n      <thead>\n        <tr>\n          <th>Nom</th>\n          <th style={{ width: '70px' }}>Bonus d'att</th>\n          <th>Dégats / Type</th>\n        </tr>\n      </thead>\n      <tbody>\n        {getValue().map(\n          (\n            v: {\n              name: string | number | readonly string[] | undefined\n              bonus: string | number | readonly string[] | undefined\n              damage: string | number | readonly string[] | undefined\n            },\n            index: string\n          ) => {\n            return (\n              <tr key={'d-and-d-table-row-' + props.name + index}>\n                <td>\n                  <input\n                    type='text'\n                    value={v.name ? v.name : ''}\n                    onChange={(e) => updateValue(index, 'name', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.bonus ? v.bonus : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'bonus', e.target.value)\n                    }\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.damage ? v.damage : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'damage', e.target.value)\n                    }\n                  />\n                </td>\n              </tr>\n            )\n          }\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default AttackTable\n","import React from 'react'\n\nfunction Currency(props: {\n  classes?: string\n  label: React.ReactNode\n  value: string | number | readonly string[] | undefined\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  let classes = 'd-and-d-currency'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <div className='d-and-d-currency-label'>\n        <label>{props.label}</label>\n      </div>\n      <div className='d-and-d-currency-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Currency\n","import React from 'react';\n\ninterface PageTitleProps {\n  value?: string;\n  onChange?: (value: string) => void;\n}\n\nconst PageTitle: React.FC<PageTitleProps> = ({ value = \"Titre de la campagne\", onChange }) => {\n  return (\n    <div>\n      <input \n        type=\"text\" \n        placeholder=\"Titre de la campagne\" \n        value={value}\n        onChange={(e) => onChange?.(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default PageTitle;","import React from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport DnDCharacter from './DnDCharacter'\n\nimport Statbox from './Components/StatBox'\nimport StatRow from './Components/StatRow'\nimport Skill from './Components/Skill'\nimport StatBox2 from './Components/StatBox2'\nimport DeathSave from './Components/DeathSave'\nimport AttackTable from './Components/AttackTable'\nimport Currency from './Components/Currency'\nimport PageTitle from './Components/PageTitle'\n\n// Import lib for calculator\nimport { evaluate } from 'mathjs';\n\nimport './dndstyles.css'\n\ninterface IDnDCharacterStatsSheetProps {\n  character?: DnDCharacter\n  defaultCharacter?: DnDCharacter\n  onCharacterChanged?: (\n    character: DnDCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IDnDCharacterStatsSheetState {\n  character: DnDCharacter\n}\n\nconst initialState: IDnDCharacterStatsSheetState = {\n  character: {}\n}\n\nclass DnDCharacterStatsSheet extends React.Component<\n  IDnDCharacterStatsSheetProps,\n  IDnDCharacterStatsSheetState\n> {\n  constructor(props: IDnDCharacterStatsSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: DnDCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-3 pr-2 pl-2'>\n              <div className='d-and-d-page-title'>\n                <PageTitle \n                  value={character.pageTitle} \n                  onChange={(value) => this.updateCharacter('pageTitle', value)}\n                />\n              </div>\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\n                <input\n                  type='text'\n                  value={character.name ? character.name : ''}\n                  onChange={(e) => this.updateCharacter('name', e.target.value)}\n                />\n              </div>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'right',\n                  textTransform: 'uppercase',\n                  fontSize: '11px'\n                }}\n              >\n                Nom du personnage\n              </label>\n            </div>\n            <div className='col-md-9 pr-2 pl-2'>\n              <div className='d-and-d-attribute-collection pr-3 pl-3'>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.classLevel ? character.classLevel : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('classLevel', e.target.value)\n                      }\n                    />\n                    <label>Classe & Niveau</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.background ? character.background : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('background', e.target.value)\n                      }\n                    />\n                    <label>Historique</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.playerName ? character.playerName : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('playerName', e.target.value)\n                      }\n                    />\n                    <label>Nom du joueur</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.faction ? character.faction : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('faction', e.target.value)\n                      }\n                    />\n                    <label>Faction</label>\n                  </div>\n                </div>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.race ? character.race : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('race', e.target.value)\n                      }\n                    />\n                    <label>Race</label>\n                  </div>\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.alignment ? character.alignment : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('alignment', e.target.value)\n                      }\n                    />\n                    <label>Alignement</label>\n                  </div>\n                  {/* <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.xp ? character.xp : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('xp', e.target.value)\n                      }\n                    />\n                    <label>Experience Points</label>\n                  </div> */}\n                  {/* <div className='col-md-3 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.dciNo ? character.dciNo : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('dciNo', e.target.value)\n                      }\n                    />\n                    <label>DCI Number</label>\n                  </div> */}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='row'>\n                <div className='col-4 pr-1'>\n                  <div className='d-and-d-box gray'>\n                    <Statbox\n                      label='Force'\n                      name='str'\n                      value={character.str}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Dexterité'\n                      name='dex'\n                      value={character.dex}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Constitution'\n                      name='con'\n                      value={character.con}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Intelligence'\n                      name='int'\n                      value={character.int}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Sagesse'\n                      name='wis'\n                      value={character.wis}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Statbox\n                      label='Charisme'\n                      name='cha'\n                      value={character.cha}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className='col-8'>\n                  <StatRow\n                    label='Inspiration'\n                    name='inspiration'\n                    value={character.inspiration}\n                    onChange={(name: string, value: any) => {\n                      this.updateCharacter(name, value)\n                    }}\n                  />\n                  <StatRow\n                    classes='rounded'\n                    label='Bonus de Maîtrise'\n                    name='proficiencyBonus'\n                    value={character.proficiencyBonus}\n                    onChange={(name: string, value: any) => {\n                      this.updateCharacter(name, value)\n                    }}\n                  />\n                  <div className='d-and-d-box'>\n                    <div style={{ textAlign: 'left' }}>\n                      <Skill\n                        label='Force'\n                        name='strSave'\n                        value={character.strSave}\n                        checked={character.strSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Dexterité'\n                        name='dexSave'\n                        value={character.dexSave}\n                        checked={character.dexSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Constitution'\n                        name='conSave'\n                        value={character.conSave}\n                        checked={character.conSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Intelligence'\n                        name='intSave'\n                        value={character.intSave}\n                        checked={character.intSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Sagesse'\n                        name='wisSave'\n                        value={character.wisSave}\n                        checked={character.wisSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Charisme'\n                        name='chaSave'\n                        value={character.chaSave}\n                        checked={character.chaSaveChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                    </div>\n                    <label\n                      className='d-and-d-title'\n                      style={{ marginTop: '10px' }}\n                    >\n                      Jets de sauvegarde\n                    </label>\n                  </div>\n                  <div className='d-and-d-box'>\n                    <div style={{ textAlign: 'left' }}>\n                      <Skill\n                        label='Acrobaties'\n                        hint='(Dex)'\n                        name='skillAcrobatics'\n                        value={character.skillAcrobatics}\n                        checked={character.skillAcrobaticsChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Arcanes'\n                        hint='(Int)'\n                        name='skillArcana'\n                        value={character.skillArcana}\n                        checked={character.skillArcanaChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Athlétisme'\n                        hint='(For)'\n                        name='skillAthletics'\n                        value={character.skillAthletics}\n                        checked={character.skillAthleticsChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Discrétion'\n                        hint='(Dex)'\n                        name='skillStealth'\n                        value={character.skillStealth}\n                        checked={character.skillStealthChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Dressage'\n                        hint='(Sag)'\n                        name='skillAnimalHandling'\n                        value={character.skillAnimalHandling}\n                        checked={character.skillAnimalHandlingChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Escamotage'\n                        hint='(Dex)'\n                        name='skillDeception'\n                        value={character.skillDeception}\n                        checked={character.skillDeceptionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Histoire'\n                        hint='(Int)'\n                        name='skillHistory'\n                        value={character.skillHistory}\n                        checked={character.skillHistoryChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Intimidation'\n                        hint='(Cha)'\n                        name='skillIntimidation'\n                        value={character.skillIntimidation}\n                        checked={character.skillIntimidationChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Intuition'\n                        hint='(Sag)'\n                        name='skillInsight'\n                        value={character.skillInsight}\n                        checked={character.skillInsightChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Investigation'\n                        hint='(Int)'\n                        name='skillInvestigation'\n                        value={character.skillInvestigation}\n                        checked={character.skillInvestigationChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Médicine'\n                        hint='(Sag)'\n                        name='skillMedicine'\n                        value={character.skillMedicine}\n                        checked={character.skillMedicineChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Nature'\n                        hint='(Int)'\n                        name='skillNature'\n                        value={character.skillNature}\n                        checked={character.skillNatureChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Perception'\n                        hint='(Sag)'\n                        name='skillPerception'\n                        value={character.skillPerception}\n                        checked={character.skillPerceptionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Persuasion'\n                        hint='(Cha)'\n                        name='skillPersuasion'\n                        value={character.skillPersuasion}\n                        checked={character.skillPersuasionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Religion'\n                        hint='(Int)'\n                        name='skillReligion'\n                        value={character.skillReligion}\n                        checked={character.skillReligionChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Représentation'\n                        hint='(Dex)'\n                        name='skillSlightOfHand'\n                        value={character.skillSlightOfHand}\n                        checked={character.skillSlightOfHandChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Survie'\n                        hint='(Sag)'\n                        name='skillSurvival'\n                        value={character.skillSurvival}\n                        checked={character.skillSurvivalChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <Skill\n                        label='Tromperie'\n                        hint='(Cha)'\n                        name='skillTromperie'\n                        value={character.skillTromperie}\n                        checked={character.skillTromperieChecked}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                    </div>\n                    <label\n                      className='d-and-d-title'\n                      style={{ marginTop: '10px' }}\n                    >\n                      Compétences\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-2'>\n                <StatRow\n                  classes='rounded rounded-sides'\n                  label='Sagesse (Perception) passive'\n                  name='passivePerception'\n                  value={character.passivePerception}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n              <div className='d-and-d-box mt-4'>\n                <textarea\n                  value={\n                    character.otherProficiencies\n                      ? character.otherProficiencies\n                      : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('otherProficiencies', e.target.value)\n                  }\n                  rows={12}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Autres maîtrises et langues\n                </label>\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className='d-and-d-box gray'>\n                <div className='row'>\n                  <div className='col-4 pr-2'>\n                    <StatBox2\n                      classes='shield'\n                      labelTop='Classe'\n                      label=\"D'armure\"\n                      name='ac'\n                      value={character.ac}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                  <div className='col-4 pr-2 pl-2'>\n                    <StatBox2\n                      label='Initiative'\n                      name='init'\n                      value={character.init}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                  <div className='col-4 pl-2'>\n                    <StatBox2\n                      label='Vitesse'\n                      name='speed'\n                      value={character.speed}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '8px 8px 0 0',\n                    marginBottom: '5px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <div className='d-and-d-gray-text'>\n                    <label style={{ width: '95px' }}>Maximum de point de vie</label>\n                    <input\n                      type='text'\n                      style={{ width: 'calc(100% - 95px)' }}\n                      className='d-and-d-linput'\n                      value={character.maxHp ? character.maxHp : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('maxHp', e.target.value)\n                      }\n                    />\n                  </div>\n                  <input\n                    type=\"text\"\n                    className=\"d-and-d-cinput\"\n                    value={character.hp ? character.hp.toString() : ''} // Affiche les PV actuels\n                    onChange={(e) => {\n                      this.updateCharacter('hp', e.target.value); // Met à jour avec la saisie brute\n                    }}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') {\n                        const inputValue = e.currentTarget.value.trim(); // Supprime les espaces inutiles\n                        try {\n                          // Évalue l'expression mathématique en toute sécurité\n                          const result = evaluate(inputValue); // Utilisation de mathjs\n                          this.updateCharacter('hp', Math.round(result).toString()); // Met à jour avec le résultat arrondi\n                        } catch (error) {\n                          console.error('Erreur dans le calcul :', error); // Affiche une erreur dans la console\n                        }\n                      }\n                    }}\n                  />\n                  <label className=\"d-and-d-title\" style={{ marginTop: '5px' }}>\n                    Points de vie actuels\n                  </label>\n                </div>\n                <div\n                  className='d-and-d-box white mb-2'\n                  style={{ borderRadius: '0 0 8px 8px', paddingBottom: '5px' }}\n                >\n                  <input\n                    type='text'\n                    className='d-and-d-cinput'\n                    value={character.tempHp ? character.tempHp : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('tempHp', e.target.value)\n                    }\n                  />\n                  <label className='d-and-d-title' style={{ marginTop: '5px' }}>\n                    Points de vie temporaires\n                  </label>\n                </div>\n\n                <div className='row mt-1'>\n                  <div className='col-6 pr-1'>\n                    <div\n                      className='d-and-d-box white mb-0'\n                      style={{ paddingBottom: '5px' }}\n                    >\n                      <div className='d-and-d-gray-text'>\n                        <label style={{ width: '25px' }}>Total</label>\n                        <input\n                          type='text'\n                          style={{ width: 'calc(100% - 25px)' }}\n                          className='d-and-d-linput'\n                          value={\n                            character.hitDiceMax ? character.hitDiceMax : ''\n                          }\n                          onChange={(e) =>\n                            this.updateCharacter('hitDiceMax', e.target.value)\n                          }\n                        />\n                      </div>\n                      <input\n                        type='text'\n                        className='d-and-d-cinput'\n                        value={character.hitDice ? character.hitDice : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice', e.target.value)\n                        }\n                      />\n                      <label\n                        className='d-and-d-title'\n                        style={{ marginTop: '5px' }}\n                      >\n                        Dés de vie\n                      </label>\n                    </div>\n                  </div>\n                  <div className='col-6 pl-1'>\n                    <div\n                      className='d-and-d-box white mb-0'\n                      style={{ paddingBottom: '5px' }}\n                    >\n                      <DeathSave\n                        classes='d-and-d-save-success'\n                        label='Succès'\n                        name='deathsaveSuccesses'\n                        value={character.deathsaveSuccesses}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <DeathSave\n                        classes='d-and-d-save-failure'\n                        label='Échecs'\n                        name='deathsaveFailures'\n                        value={character.deathsaveFailures}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                      <label\n                        className='d-and-d-title'\n                        style={{ marginTop: '6px' }}\n                      >\n                        Jet de sauvegarde contre la mort\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className='d-and-d-box mt-3'>\n                <AttackTable\n                  rows={3}\n                  name='attacks'\n                  value={character.attacks}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <textarea\n                  value={character.attacksText ? character.attacksText : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('attacksText', e.target.value)\n                  }\n                  rows={6}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Attaques et incantations\n                </label>\n              </div>\n\n              <div className='d-and-d-box mt-4'>\n                <div className='row'>\n                  <div className='' style={{ width: '100px' }}>\n                    <Currency\n                      label='PC'\n                      name='cp'\n                      value={character.cp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='PA'\n                      name='sp'\n                      value={character.sp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    {/* <Currency\n                      label='PE'\n                      name='ep'\n                      value={character.ep}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    /> */}\n                    <Currency\n                      label='PO'\n                      name='gp'\n                      value={character.gp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <Currency\n                      label='PP'\n                      name='pp'\n                      value={character.pp}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                  </div>\n                  <div className='col'>\n                    <textarea\n                      className='d-and-d-equipment-indent'\n                      value={character.equipment ? character.equipment : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('equipment', e.target.value)\n                      }\n                      rows={10}\n                    />\n                  </div>\n                  <div className='col-md-12'>\n                    <textarea\n                      value={character.equipment2 ? character.equipment2 : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('equipment2', e.target.value)\n                      }\n                      rows={4}\n                    />\n                  </div>\n                </div>\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Équipement\n                </label>\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div\n                className='d-and-d-box gray'\n                style={{ marginBottom: '17px' }}\n              >\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '8px 8px 0 0',\n                    marginBottom: '5px',\n                    paddingTop: '1px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <textarea\n                    value={\n                      character.personalityTraits\n                        ? character.personalityTraits\n                        : ''\n                    }\n                    onChange={(e) =>\n                      this.updateCharacter('personalityTraits', e.target.value)\n                    }\n                    rows={3}\n                  />\n                  <label className='d-and-d-title'>Trait de personnalité</label>\n                </div>\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '0 0 0 0',\n                    marginBottom: '5px',\n                    paddingTop: '1px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <textarea\n                    value={character.ideals ? character.ideals : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('ideals', e.target.value)\n                    }\n                    rows={3}\n                  />\n                  <label className='d-and-d-title'>Idéaux</label>\n                </div>\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '0 0 0 0',\n                    marginBottom: '5px',\n                    paddingTop: '1px',\n                    paddingBottom: '5px'\n                  }}\n                >\n                  <textarea\n                    value={character.bonds ? character.bonds : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('bonds', e.target.value)\n                    }\n                    rows={2}\n                  />\n                  <label className='d-and-d-title'>Obligations</label>\n                </div>\n                <div\n                  className='d-and-d-box white'\n                  style={{\n                    borderRadius: '0 0 8px 8px',\n                    marginBottom: '0px',\n                    paddingTop: '1px',\n                    paddingBottom: '4px'\n                  }}\n                >\n                  <textarea\n                    value={character.flaws ? character.flaws : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('flaws', e.target.value)\n                    }\n                    rows={2}\n                  />\n                  <label className='d-and-d-title'>Failles</label>\n                </div>\n              </div>\n              <div className='d-and-d-box mt-3'>\n                <textarea\n                  style={{ paddingBottom: '5px' }}\n                  value={\n                    character.featuresTraits ? character.featuresTraits : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('featuresTraits', e.target.value)\n                  }\n                  rows={27}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Capacités et Traits\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default DnDCharacterStatsSheet\n","import React from 'react'\n\nfunction Image(props: {\n  classes?: string\n  value: any\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  function importImage(event: any) {\n    console.log(event)\n    if (event.target.files.length > 0) {\n      console.log(event.target.files)\n      if (event.target.files[0].size > 2000000) {\n        window.alert(\n          'Image is too large. Max size is 2 Mb. Please reduce the size and upload again.'\n        )\n        return\n      }\n\n      var fr = new FileReader()\n\n      fr.onload = function (e) {\n        if (\n          e.target &&\n          e.target.result &&\n          typeof e.target.result === 'string'\n        ) {\n          props.onChange(props.name, e.target.result)\n        }\n      }\n\n      fr.readAsDataURL(event.target.files[0])\n    }\n  }\n\n  let classes = 'd-and-d-image'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  const elementId = 'd-and-d-image-' + props.name\n\n  return (\n    <div\n      className={classes}\n      style={{\n        backgroundImage: props.value ? 'url(' + props.value + ')' : ''\n      }}\n      onClick={() => document.getElementById(elementId)?.click()}\n    >\n      <input\n        style={{ display: 'none' }}\n        type='file'\n        id={elementId}\n        accept='image/*'\n        onChange={(e) => importImage(e)}\n      />\n    </div>\n  )\n}\n\nexport default Image\n","/* eslint-disable prettier/prettier */\nimport React from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport DnDCharacter from './DnDCharacter'\n\nimport StatRow from './Components/StatRow'\nimport Image from './Components/Image'\nimport PageTitle from './Components/PageTitle';\n\nimport './dndstyles.css'\n\ninterface IDnDCharacterProfileSheetProps {\n  character?: DnDCharacter\n  defaultCharacter?: DnDCharacter\n  onCharacterChanged?: (\n    character: DnDCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IDnDCharacterProfileSheetState {\n  character: DnDCharacter\n}\n\nconst initialState: IDnDCharacterProfileSheetState = {\n  character: {}\n}\n\nclass DnDCharacterProfileSheet extends React.Component<\n  IDnDCharacterProfileSheetProps,\n  IDnDCharacterProfileSheetState\n> {\n  constructor(props: IDnDCharacterProfileSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: DnDCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-3 pr-2 pl-2'>\n              <div className='d-and-d-page-title'>\n                <PageTitle \n                  value={character.pageTitle} \n                  onChange={(value) => this.updateCharacter('pageTitle', value)}\n                />\n              </div>\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\n                <input\n                  type='text'\n                  value={character.name ? character.name : ''}\n                  onChange={(e) => this.updateCharacter('name', e.target.value)}\n                />\n              </div>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'right',\n                  textTransform: 'uppercase',\n                  fontSize: '11px'\n                }}\n              >\n                Nom du Personnage\n              </label>\n            </div>\n            <div className='col-md-9 pr-2 pl-2'>\n              <div className='d-and-d-attribute-collection pr-3 pl-3'>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.age ? character.age : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('age', e.target.value)\n                      }\n                    />\n                    <label>Age</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.height ? character.height : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('height', e.target.value)\n                      }\n                    />\n                    <label>Taille</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.weight ? character.weight : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('weight', e.target.value)\n                      }\n                    />\n                    <label>Poids</label>\n                  </div>\n                </div>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.eyes ? character.eyes : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('eyes', e.target.value)\n                      }\n                    />\n                    <label>Yeux</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.skin ? character.skin : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('skin', e.target.value)\n                      }\n                    />\n                    <label>Peau</label>\n                  </div>\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\n                    <input\n                      type='text'\n                      value={character.hair ? character.hair : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('hair', e.target.value)\n                      }\n                    />\n                    <label>Cheveux</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='d-and-d-box square'>\n                <Image \n                  name='appearance'\n                  value={character.appearance}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Apparence du personnage\n                </label>\n              </div>\n\n              <div className='d-and-d-box mt-3'>\n                <textarea\n                  style={{ paddingBottom: '5px' }}\n                  value={\n                    character.backstory ? character.backstory : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('backstory', e.target.value)\n                  }\n                  rows={26}\n                />\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Histoire du personnage\n                </label>\n              </div>\n            </div>\n\n            <div className='col-md-8'>\n              <div className='d-and-d-box'>\n                <div className='row'>\n                  <div className='col-md-6 border-right'>\n                    <div className='d-and-d-gray-text' style={{ paddingBottom: '1px' }}>\n                      <label style={{ width: '70px' }}>Faction Rank</label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 70px)' }}\n                        className='d-and-d-linput'\n                        value={character.factionRank ? character.factionRank : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('factionRank', e.target.value)\n                        }\n                      />\n                    </div>\n\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.allies ? character.allies : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('allies', e.target.value)\n                      }\n                      rows={16}\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <div className='d-and-d-box gray noborder' style={{marginBottom: '13px'}}>\n                      <div className='d-and-d-faction-input'>\n                        <label>Faction</label>\n                        <input\n                          type='text'\n                          value={character.faction ? character.faction : ''}\n                          onChange={(e) =>\n                            this.updateCharacter('faction', e.target.value)\n                          }\n                        />\n                      </div>\n                      <Image \n                        classes='faction'\n                        name='factionImg'\n                        value={character.factionImg}\n                        onChange={(name: string, value: any) => {\n                          this.updateCharacter(name, value)\n                        }}\n                      />\n                    </div>\n\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.allies2 ? character.allies2 : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('allies2', e.target.value)\n                      }\n                      rows={3}\n                    />\n                  </div>\n                </div>\n                \n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Alliés et organisations\n                </label>\n              </div>\n              \n              <div className='d-and-d-box mt-3'>\n                <div className='row'>\n                  <div className='col-md-6 border-right'>\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.additionalFeatures ? character.additionalFeatures : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('additionalFeatures', e.target.value)\n                      }\n                      rows={13}\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <textarea\n                      style={{ paddingBottom: '5px' }}\n                      value={\n                        character.additionalFeatures2 ? character.additionalFeatures2 : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('additionalFeatures2', e.target.value)\n                      }\n                      rows={13}\n                    />\n                  </div>\n                </div>\n\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\n                  Capacités et traits supplémentaires\n                </label>\n              </div>\n\n              <div className='d-and-d-box mt-3'>\n                <div className='row'>\n                  <div className='col-md-6 border-right'>\n                    <StatRow\n                      classes='m-2 rounded rounded-sides wide-input'\n                      label='Total Non-Consumable Magic Items'\n                      name='totalNonConsumableMagicItems'\n                      value={character.totalNonConsumableMagicItems}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n\n                    <textarea\n                      style={{ paddingBottom: '5px', marginTop: '2px' }}\n                      value={\n                        character.treasure ? character.treasure : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('treasure', e.target.value)\n                      }\n                      rows={8}\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <textarea\n                      style={{ paddingBottom: '5px', marginTop: '4px' }}\n                      value={\n                        character.treasure2 ? character.treasure2 : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('treasure2', e.target.value)\n                      }\n                      rows={10}\n                    />\n                  </div>\n                </div>\n                \n                <label className='d-and-d-title' style={{ marginTop: '4px' }}>\n                  Trésor\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DnDCharacterProfileSheet\n","/* eslint-disable prettier/prettier */\nimport React from 'react'\n\nfunction SpellTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  slotsName?: string\n  slotsUsedName?: string\n  level: number\n  value?: any\n  slotsValue?: string\n  slotsUsedValue?: number\n  classes?: string\n  rows: number\n  showLabels?: boolean\n  style?: React.CSSProperties | undefined\n}) {\n  function updateValue(index: React.Key, field: string, v: string | boolean) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  function renderSlotsRemaining() {\n    let slotCount = 6\n    if (props.slotsValue != null && props.slotsValue !== '' && Number(props.slotsValue) != null) {\n      slotCount = Number(props.slotsValue)\n    }\n\n    const slots = []\n    for (let i1 = 1; i1 <= slotCount; i1++) {\n      slots.push(\n        <div\n          key={'d-and-d-table-slot-' + props.name + i1}\n          className={\n            props.slotsUsedValue && props.slotsUsedValue >= i1\n              ? 'd-and-d-skill-circle active'\n              : 'd-and-d-skill-circle'\n          }\n          onClick={() =>\n            props.onChange(\n              props.slotsUsedName,\n              props.slotsUsedValue === i1 ? null : i1\n            )\n          }\n        />\n      )\n    }\n\n    return slots\n  }\n\n  let classes = 'd-and-d-spelllist'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes} style={props.style}>\n      {props.showLabels ? (\n        <div className='d-and-d-spell-header-labels'>\n          <label style={{ width: '20px' }}>Niveau du Sort</label>\n          <label style={{ width: '80px' }}>Emplacements</label>\n          <label style={{ width: 'calc(100% - 100px)' }}>Emplacements utilisés</label>\n        </div>\n      ) : null}\n      <div className='d-and-d-spell-header'>\n        <div className='d-and-d-spell-level'>{props.level}</div>\n        {props.level === 0 ? (\n          <div className='d-and-d-spell-slots'>\n            <label>Sorts mineurs</label>\n          </div>\n        ) : (\n          <div className='d-and-d-spell-slots'>\n            <div className='d-and-d-spell-slots-total'>\n              <input\n                type='text'\n                value={props.slotsValue ? props.slotsValue : ''}\n                onChange={(e) =>\n                  props.onChange(props.slotsName, e.target.value)\n                }\n              />\n            </div>\n            <div className='d-and-d-spell-slots-remaining'>\n              {renderSlotsRemaining()}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <table>\n        {props.showLabels ? (\n          <thead>\n            <tr>\n              <th style={{ width: '30px', position: 'absolute', left: '-7px' }}>\n                Préparés\n              </th>\n              <th>Nom du sort</th>\n            </tr>\n          </thead>\n        ) : null}\n        <tbody>\n          {getValue().map(\n            (\n              v: {\n                name: string | number | readonly string[] | undefined\n                prepared: boolean | undefined\n              },\n              index: string\n            ) => {\n              return (\n                <tr key={'d-and-d-table-row-' + props.name + index}>\n                  {props.level > 0 ? (\n                    <td className='d-and-d-spell-prepared'>\n                      <div\n                        className={\n                          v.prepared\n                            ? 'd-and-d-skill-circle active'\n                            : 'd-and-d-skill-circle'\n                        }\n                        onClick={() =>\n                          updateValue(index, 'prepared', !v.prepared)\n                        }\n                      />\n                    </td>\n                  ) : null}\n                  <td>\n                    <input\n                      type='text'\n                      value={v.name ? v.name : ''}\n                      onChange={(e) =>\n                        updateValue(index, 'name', e.target.value)\n                      }\n                    />\n                  </td>\n                </tr>\n              )\n            }\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default SpellTable\n","import React from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport DnDCharacter from './DnDCharacter'\n\nimport StatBox2 from './Components/StatBox2'\n\nimport './dndstyles.css'\nimport SpellTable from './Components/SpellTable'\nimport PageTitle from './Components/PageTitle'\n\ninterface IDnDCharacterSpellsSheetProps {\n  character?: DnDCharacter\n  defaultCharacter?: DnDCharacter\n  onCharacterChanged?: (\n    character: DnDCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IDnDCharacterSpellsSheetState {\n  character: DnDCharacter\n}\n\nconst initialState: IDnDCharacterSpellsSheetState = {\n  character: {}\n}\n\nclass DnDCharacterSpellsSheet extends React.Component<\n  IDnDCharacterSpellsSheetProps,\n  IDnDCharacterSpellsSheetState\n> {\n  constructor(props: IDnDCharacterSpellsSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: DnDCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-3 pr-2 pl-2'>\n            <div className='d-and-d-page-title'>\n                <PageTitle \n                  value={character.pageTitle} \n                  onChange={(value) => this.updateCharacter('pageTitle', value)}\n                />\n              </div>\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\n                <input\n                  type='text'\n                  value={\n                    character.spellcastingClass\n                      ? character.spellcastingClass\n                      : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('spellcastingClass', e.target.value)\n                  }\n                />\n              </div>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'center',\n                  textTransform: 'uppercase',\n                  fontSize: '11px'\n                }}\n              >\n                Classe d'incantations\n              </label>\n              <label\n                style={{\n                  width: '100%',\n                  textAlign: 'center',\n                  textTransform: 'uppercase',\n                  fontSize: '9px'\n                }}\n              >\n                (Caractéristique d'incantation)\n              </label>\n            </div>\n            <div className='col-md-9 pr-2 pl-2' style={{ marginTop: '18px' }}>\n              <div className='d-and-d-attribute-collection gray pr-3 pl-3'>\n                <div className='row pl-3 pr-3'>\n                  <div className='col-4 pr-4 pl-4'>\n                    <StatBox2\n                      name='preparedSpellsTotal'\n                      value={character.preparedSpellsTotal}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      SORTS À PRÉPARER\n                    </label>\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      CHAQUE JOUR\n                    </label>\n                  </div>\n                  <div className='col-4 pr-4 pl-4'>\n                    <StatBox2\n                      name='spellSaveDC'\n                      value={character.spellSaveDC}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      DD DE SAUVEGARDE\n                    </label>\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      DES SORTS\n                    </label>\n                  </div>\n                  <div className='col-4 pr-4 pl-4'>\n                    <StatBox2\n                      name='spellAttackBonus'\n                      value={character.spellAttackBonus}\n                      onChange={(name: string, value: any) => {\n                        this.updateCharacter(name, value)\n                      }}\n                    />\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      BONUS D'ATTAQUE\n                    </label>\n                    <label\n                      style={{\n                        textTransform: 'none',\n                        width: '100%',\n                        textAlign: 'center',\n                        marginBottom: '0'\n                      }}\n                    >\n                      AVEC UN SORT\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='d-and-d-box'>\n                <SpellTable\n                  level={0}\n                  rows={9}\n                  name='cantrips'\n                  value={character.cantrips}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                  style={{ marginBottom: '23px' }}\n                />\n                <SpellTable\n                  level={1}\n                  rows={12}\n                  showLabels\n                  name='lvl1Spells'\n                  slotsName='lvl1SpellSlotsTotal'\n                  slotsUsedName='lvl1SpellSlotsUsed'\n                  value={character.lvl1Spells}\n                  slotsValue={character.lvl1SpellSlotsTotal}\n                  slotsUsedValue={character.lvl1SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={2}\n                  rows={13}\n                  name='lvl2Spells'\n                  slotsName='lvl2SpellSlotsTotal'\n                  slotsUsedName='lvl2SpellSlotsUsed'\n                  value={character.lvl2Spells}\n                  slotsValue={character.lvl2SpellSlotsTotal}\n                  slotsUsedValue={character.lvl2SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className='d-and-d-box'>\n                <SpellTable\n                  level={3}\n                  rows={13}\n                  name='lvl3Spells'\n                  slotsName='lvl3SpellSlotsTotal'\n                  slotsUsedName='lvl3SpellSlotsUsed'\n                  value={character.lvl3Spells}\n                  slotsValue={character.lvl3SpellSlotsTotal}\n                  slotsUsedValue={character.lvl3SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={4}\n                  rows={13}\n                  name='lvl4Spells'\n                  slotsName='lvl4SpellSlotsTotal'\n                  slotsUsedName='lvl4SpellSlotsUsed'\n                  value={character.lvl4Spells}\n                  slotsValue={character.lvl4SpellSlotsTotal}\n                  slotsUsedValue={character.lvl4SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={5}\n                  rows={9}\n                  name='lvl5Spells'\n                  slotsName='lvl5SpellSlotsTotal'\n                  slotsUsedName='lvl5SpellSlotsUsed'\n                  value={character.lvl5Spells}\n                  slotsValue={character.lvl5SpellSlotsTotal}\n                  slotsUsedValue={character.lvl5SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className='d-and-d-box'>\n                <SpellTable\n                  level={6}\n                  rows={9}\n                  name='lvl6Spells'\n                  slotsName='lvl6SpellSlotsTotal'\n                  slotsUsedName='lvl6SpellSlotsUsed'\n                  value={character.lvl6Spells}\n                  slotsValue={character.lvl6SpellSlotsTotal}\n                  slotsUsedValue={character.lvl6SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={7}\n                  rows={9}\n                  name='lvl7Spells'\n                  slotsName='lvl7SpellSlotsTotal'\n                  slotsUsedName='lvl7SpellSlotsUsed'\n                  value={character.lvl7Spells}\n                  slotsValue={character.lvl7SpellSlotsTotal}\n                  slotsUsedValue={character.lvl7SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={8}\n                  rows={7}\n                  name='lvl8Spells'\n                  slotsName='lvl8SpellSlotsTotal'\n                  slotsUsedName='lvl8SpellSlotsUsed'\n                  value={character.lvl8Spells}\n                  slotsValue={character.lvl8SpellSlotsTotal}\n                  slotsUsedValue={character.lvl8SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <SpellTable\n                  level={9}\n                  rows={7}\n                  name='lvl9Spells'\n                  slotsName='lvl9SpellSlotsTotal'\n                  slotsUsedName='lvl9SpellSlotsUsed'\n                  value={character.lvl9Spells}\n                  slotsValue={character.lvl9SpellSlotsTotal}\n                  slotsUsedValue={character.lvl9SpellSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DnDCharacterSpellsSheet\n","import React, { useState, useEffect } from 'react'\nimport {\n  Switch,\n  Route,\n  Link,\n  withRouter,\n  Redirect,\n  useLocation\n} from 'react-router-dom'\nimport axios from 'axios'\nimport qs from 'qs'\n\nimport { \n  DnDCharacterStatsSheet, \n  DnDCharacterProfileSheet, \n  DnDCharacterSpellSheet, \n  DnDCharacter \n} from 'dnd-character-sheets'\nimport './styles/dnd-character-sheets.css'\n\nfunction ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n\nconst App = (props: any) => {\n  const [character, setCharacter] = useState<DnDCharacter>(loadDefaultCharacter())\n  const [navTop, setNavTop] = useState<number>(0)\n  const [prevScrollpos, setPrevScrollpos] = useState<number>(window.pageYOffset)\n  const [, setLoading] = useState<boolean>(false)\n\n  const { search } = useLocation();\n  useEffect(() => {\n    const characterToLoad = qs.parse(search, { ignoreQueryPrefix: true }).character\n    if (characterToLoad) {\n      setLoading(true)\n      axios\n        .get('characters/' + characterToLoad + '.json')\n        .then((response: any) => {\n          setLoading(false)\n          try {\n            if (!Array.isArray(response.data) && typeof response.data === 'object') {\n              console.log('Loaded Character - ' + characterToLoad)\n              updateCharacter(response.data)\n            } else {\n              throw new Error('Json file does not contain a DnD character.')\n            }\n          }\n          catch {\n            throw new Error('Json file does not contain a DnD character.')\n          }\n        })\n        .catch((error: any) => {\n          console.log('Failed to load Character - ' + characterToLoad)\n          console.log(error)\n          setLoading(false)\n        })\n    }\n  }, [search]);\n\n  const statsSheet = (\n    <DnDCharacterStatsSheet\n      character={character}\n      onCharacterChanged={updateCharacter}\n    />\n  )\n  const profileSheet = (\n    <DnDCharacterProfileSheet\n      character={character}\n      onCharacterChanged={updateCharacter}\n    />\n  )\n  const spellSheet = (\n    <DnDCharacterSpellSheet\n      character={character}\n      onCharacterChanged={updateCharacter}\n    />\n  )\n\n  window.onscroll = function() {onScroll()};\n  function onScroll() {\n    var currentScrollPos = window.pageYOffset;\n    if (prevScrollpos > currentScrollPos || currentScrollPos < 20) {\n      setNavTop(0)\n    } else {\n      setNavTop(-280);\n    }\n    setPrevScrollpos(currentScrollPos)\n  }\n\n  function loadDefaultCharacter () {\n    let character: DnDCharacter = {}\n    const lsData = localStorage.getItem('dnd-character-data')\n    if (lsData) {\n      try {\n        character = JSON.parse(lsData)\n      } catch {}\n    }\n    return character\n  }\n\n  function updateCharacter (character: DnDCharacter) {\n    setCharacter(character)\n    localStorage.setItem('dnd-character-data', JSON.stringify(character))\n  }\n\n  function exportCharacter () {\n    const json = JSON.stringify(character, null, 2)\n\n    var a = document.createElement('a');\n    var file = new Blob([json], {type: 'application/json'});\n    a.href = URL.createObjectURL(file);\n    a.download = character.name ? character.name.replace(/[^a-z0-9]/gi, '_').toLowerCase() + '.json' : 'dnd-character.json';\n    a.click();\n  }\n\n\n  function importCharacter (event: any) {\n    if (event.target.files.length > 0){\n      var fr = new FileReader();\n\n      fr.onload = function(e) { \n        if (e.target && e.target.result && typeof e.target.result === 'string') {\n          loadCharacter(e.target.result)\n        }\n      }\n    \n      fr.readAsText(event.target.files[0]);\n      event.target.value = '';\n    }\n  }\n\n  function loadCharacter(json: string) {\n    try {\n      var result = JSON.parse(typeof json === 'string' ? json : '{}');\n      if (!Array.isArray(result) && typeof result === 'object') {\n        updateCharacter(result)\n      } else {\n        window.alert('Json file does not contain a DnD character.')\n      }\n    }\n    catch {\n      window.alert('Json file does not contain a DnD character.')\n    }\n  }\n\n  function clearCharacter() {\n    updateCharacter({ })\n  }\n\n  function getDefaultRedirect(search: string | undefined) {\n    let defaultRedirect = '/stats' + search\n    if (window.innerWidth < 992) { \n      // is mobile device\n      defaultRedirect = '/all' + search\n    }\n    return defaultRedirect\n  }\n\n  return (\n    <div>\n      <nav className='navbar navbar-expand-lg navbar-dark fixed-top' style={{ backgroundColor: 'rgb(153, 0, 0)', top: navTop === 0 ? '' : navTop + 'px' }}>\n          <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarSupportedContent' aria-controls='navbarSupportedContent' aria-expanded='false' aria-label='Toggle navigation'>\n              <span className='navbar-toggler-icon'></span>\n          </button>\n          <div style={{width:'100%'}}>\n            <div className='collapse navbar-collapse' id='navbarSupportedContent'>\n                <ul className='navbar-nav ml-lg-5' data-toggle='collapse' data-target='.navbar-collapse.show'>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/stats' ? 'nav-link active' : 'nav-link'} to='/stats'>Statistiques</Link>\n                    </li>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/profile' ? 'nav-link active' : 'nav-link'} to='/profile'>Profile</Link>\n                    </li>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/spells' ? 'nav-link active' : 'nav-link'} to='/spells'>Sorts</Link>\n                    </li>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/all' ? 'nav-link active' : 'nav-link'} to='/all'>All</Link>\n                    </li>\n                </ul>\n\n                <ul className='navbar-nav ml-auto mr-lg-5' data-toggle='collapse' data-target='.navbar-collapse.show'>\n                    <li className='nav-item mr-lg-3'>\n                        <button className='btn btn-dark' onClick={() => exportCharacter()}>Exporter</button>\n                        <input style={{display: 'none'}} type=\"file\" id=\"selectFiles\" accept=\"application/json\" onChange={(e) => importCharacter(e)} />\n                        <button className='btn btn-dark' onClick={() => document.getElementById(\"selectFiles\")?.click()}>Importer</button>\n                        <button className='btn btn-dark' onClick={() => window.print()}>Imprimer</button>\n                        <button className='btn btn-danger' onClick={() => clearCharacter()}>Vider</button>\n                    </li>\n                </ul>\n            </div>\n          </div>\n      </nav>\n      <div className='app-holder'>\n\n        <Switch>\n          <Route exact path='/'>\n            <ScrollToTop />\n            <Redirect to={getDefaultRedirect(search)} />\n          </Route>\n          <Route exact path='/stats'>\n            <ScrollToTop />\n            {statsSheet}\n          </Route>\n          <Route exact path='/profile'>\n            <ScrollToTop />\n            {profileSheet}\n          </Route>\n          <Route exact path='/spells'>\n            <ScrollToTop />\n            {spellSheet}\n          </Route>\n          <Route exact path='/all'>\n            <ScrollToTop />\n            {statsSheet}\n            <div className='page-break' />\n            <div className='page-space' />\n            {profileSheet}\n            <div className='page-break' />\n            <div className='page-space' />\n            {spellSheet}\n          </Route>\n        </Switch>\n        \n\n      </div>\n      {/* <footer className=\"no-print page-footer font-small text-white pt-4\" style={{ backgroundColor: 'rgb(211, 49, 21)' }}>\n        <div className=\"container-fluid container-xl text-center text-md-left mt-2 mb-3\">\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-md-0 mt-3\">\n                <h5>Fiches persos DnD</h5>\n                <p>This page was created using dnd-character-sheets, an open source ReactJs library created by Daryl Buckle.</p>\n              </div>\n              <hr className=\"clearfix w-100 d-md-none pb-3\" />\n              <div className=\"col-md-3 mb-md-0 mb-3\">\n                <h5>Links</h5>\n                <ul className=\"list-unstyled\">\n                  <li>\n                    <a href=\"https://github.com/darylbuckle/dnd-character-sheets\">Source Code</a>\n                  </li>\n                  <li>\n                    <a href=\"https://www.npmjs.com/package/dnd-character-sheets\">Npm</a>\n                  </li>\n                  <li>\n                    <a href=\"https://github.com/darylbuckle\">Daryl Buckle</a>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"col-md-3 mb-md-0 mb-3\">\n                <h5>Related</h5>\n                <ul className=\"list-unstyled\">\n                  <li>\n                    <a href=\"https://darylbuckle.github.io/espergen-character-sheets\">Esper Genesis Character Sheets</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        <div className=\"footer-copyright text-center mt-5 py-2 text-white small\" style={{ backgroundColor: 'rgb(204, 10, 33)' }}>\n          MIT © Daryl Buckle 2020\n        </div>\n      </footer> */}\n    </div>\n    \n  )\n}\n\nexport default withRouter(App)\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(<Router basename={'dnd-character-sheets-fr-translated'}><App /></Router>, document.getElementById('root'))"],"sourceRoot":""}